# DP: - When running the ACATS, look for the shared libraries in
# DP:   build/gcc/ada/rts-shared-zcx instead of build/gcc/ada/rts.

--- a/src/gcc/testsuite/lib/gnat.exp
+++ b/src/gcc/testsuite/lib/gnat.exp
@@ -94,18 +94,18 @@
 
     if { $gnat_initialized == 1 } { return }
 
-    set GNAT_UNDER_TEST "$rootme/../gnattools/gnatmake -I$rootme/ada/rts --GCC=$rootme/xgcc --GNATBIND=$rootme/../gnattools/gnatbind --GNATLINK=$rootme/../gnattools/gnatlink -cargs -B$rootme -largs --GCC=$rootme/xgcc -B$rootme -margs"
-    append ld_library_path ":$rootme/ada/rts"
+    set GNAT_UNDER_TEST "$rootme/../gnattools/gnatmake -I$rootme/ada/rts-shared-zcx --GCC=$rootme/xgcc --GNATBIND=$rootme/../gnattools/gnatbind --GNATLINK=$rootme/../gnattools/gnatlink -cargs -B$rootme -largs --GCC=$rootme/xgcc -B$rootme -margs"
+    append ld_library_path ":$rootme/ada/rts-shared-zcx"
     append ld_library_path ":$rootme/../libgnatvsn"
     append ld_library_path ":$rootme/../libgnatprj"
     set_ld_library_path_env_vars
 
     # gnatlink looks for system.ads itself and has no --RTS option, so
     # specify via environment
-    verbose -log "ADA_INCLUDE_PATH=$rootme/ada/rts"
-    verbose -log "ADA_OBJECTS_PATH=$rootme/ada/rts"
-    setenv ADA_INCLUDE_PATH "$rootme/ada/rts"
-    setenv ADA_OBJECTS_PATH "$rootme/ada/rts"
+    verbose -log "ADA_INCLUDE_PATH=$rootme/ada/rts-shared-zcx"
+    verbose -log "ADA_OBJECTS_PATH=$rootme/ada/rts-shared-zcx"
+    setenv ADA_INCLUDE_PATH "$rootme/ada/rts-shared-zcx"
+    setenv ADA_OBJECTS_PATH "$rootme/ada/rts-shared-zcx"
 
     if ![info exists tmpdir] then {
 	set tmpdir /tmp
--- a/src/gcc/testsuite/ada/acats/run_all.sh
+++ b/src/gcc/testsuite/ada/acats/run_all.sh
@@ -12,8 +12,9 @@
 gccflags="-O2"
 gnatflags="-gnatws"
 
-RTS=`cd $GNATTOOLS/../gcc/ada/rts; ${PWDCMD-pwd}`
-LD_LIBRARY_PATH=$RTS:$LIBGNATVSN:$LIBGNATPRJ
+SHARED_RTS=`cd $GNATTOOLS/../gcc/ada/rts-shared-zcx; ${PWDCMD-pwd}`
+RTS=`cd $GNATTOOLS/../gcc/ada/rts-static-zcx; ${PWDCMD-pwd}`
+LD_LIBRARY_PATH=$SHARED_RTS:$LIBGNATVSN:$LIBGNATPRJ
 export LD_LIBRARY_PATH
 
 target_run () {
